#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

// Binary Search
// 수를 정렬 후, 범위를 절반으로 줄여 가운데 인덱스의 값이 내가 찾고자 하는 수가 나왔을 때, 인덱스+1를 리턴한다.  

// Problem
// 임의의 N개의 숫자가 입력으로 주어집니다. N개의 수를 오름차순으로 
// 정렬한 다음 N개의 수 중 한 개의 수인 M이 주어지면 이분검색으로 
// M이 정렬된 상태에서 몇 번째에 있는지 구하는 프로그램을 작성하시오.

int main()
{
    int n, i, key, lt = 0, rt, mid; // lt = leftmost index, rt = rightmost index.

    cin >> n >> key;

    vector<int> array(n); // 인덱스 0 ~ n-1

    for (i = 0; i < n; i++)
    {
        cin >> array[i];
    }

    // 만일 길이가 정해지지 않았다면. 
   /* int tmp;
    for (i = 0; i < n; i++)
    {
        cin >> tmp;
        array.push_back(tmp);
    }*/

    sort(array.begin(), array.end()); // 오름 차순 정렬.
    rt = n - 1;

    while (lt <= rt) // 교차될 때까지
    {
        mid = (lt + rt) / 2;

        if (array[mid] == key)
        {
            cout << mid + 1;
            return 0;
        }
        else if (array[mid] > key)
        {
            rt = mid - 1;
        }
        else
        {
            lt = mid + 1;
        }
    }
}

